{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Contains the API documentation for the user-friendly deep-learning (UFDL) framework. The documentation available here is to be considered work in progress and can change at any given time as the project evolves.","title":"Home"},{"location":"cuda/","text":"Based on the NVIDIA driver installed on a system only certain versions of CUDA inside docker images will work. Fields cuda_version (10.0) cuda_full_version (10.0.130) driver_min_version (410.48) Actions Add mapping requires: cuda_version cuda_full_version driver_min_version Update harware partial update of any of these fields: cuda_version cuda_full_version driver_min_version Delete hardware requires: cuda_version Links CUDA/Driver version","title":"CUDA"},{"location":"cuda/#fields","text":"cuda_version (10.0) cuda_full_version (10.0.130) driver_min_version (410.48)","title":"Fields"},{"location":"cuda/#actions","text":"","title":"Actions"},{"location":"cuda/#add-mapping","text":"requires: cuda_version cuda_full_version driver_min_version","title":"Add mapping"},{"location":"cuda/#update-harware","text":"partial update of any of these fields: cuda_version cuda_full_version driver_min_version","title":"Update harware"},{"location":"cuda/#delete-hardware","text":"requires: cuda_version","title":"Delete hardware"},{"location":"cuda/#links","text":"CUDA/Driver version","title":"Links"},{"location":"data_storage/","text":"Instead of storing data items (images, audio or video files) in a database, they simply get stored on disk. In order to avoid a skewed distribution files, a hash-based approach to creating a directory structure is used: compute hash for data item using the content, not just the name, in order to allow for deduplication (eg dog.jpg generates AABBCCDD as hash) create directory structure (eg from AABBCCDD generate /AA/BB) place file in that directory, using the hash as name (eg /AA/BB/AABBCCDD.jpg) See also: File Name Hashing: Creating a Hashed Directory Structure","title":"Data storage"},{"location":"data_storage/#see-also","text":"File Name Hashing: Creating a Hashed Directory Structure","title":"See also:"},{"location":"docker_images/","text":"Docker plays a central part in UFDL, not just for training models, but also for exporting them and generating other output. Fields name url (full URL used for a docker pull ) registry_url (the URL of the registry) registry_user (only necessary if not anonymous access) registry_password (dito) cuda_version (the required cuda version to run this image) min_hardware (Pascal=1080Ti, Turing=2080Ti) framework_name framework_version domain (objdet/classify/speech/...) types (train/predict/export/evaluate/...) Actions Add docker image requires: name url registry_url registry_user registry_password cuda_version min_hardware framework_name framework_version domain types Update docker image partial update of any of these fields: name url registry_url registry_user registry_password cuda_version min_hardware framework_name framework_version domain types Delete docker image requires: name version Links docker aml-repo","title":"Docker images"},{"location":"docker_images/#fields","text":"name url (full URL used for a docker pull ) registry_url (the URL of the registry) registry_user (only necessary if not anonymous access) registry_password (dito) cuda_version (the required cuda version to run this image) min_hardware (Pascal=1080Ti, Turing=2080Ti) framework_name framework_version domain (objdet/classify/speech/...) types (train/predict/export/evaluate/...)","title":"Fields"},{"location":"docker_images/#actions","text":"","title":"Actions"},{"location":"docker_images/#add-docker-image","text":"requires: name url registry_url registry_user registry_password cuda_version min_hardware framework_name framework_version domain types","title":"Add docker image"},{"location":"docker_images/#update-docker-image","text":"partial update of any of these fields: name url registry_url registry_user registry_password cuda_version min_hardware framework_name framework_version domain types","title":"Update docker image"},{"location":"docker_images/#delete-docker-image","text":"requires: name version","title":"Delete docker image"},{"location":"docker_images/#links","text":"docker aml-repo","title":"Links"},{"location":"hardware/","text":"NVIDIA cards use belong to certain hardware generations, which have codenames. This table contains the hardware names and their compute capability. Fields generation compute_capability Actions Add hardware requires: generation compute_capability Update harware partial update of any of these fields: generation compute_capability Delete hardware requires: generation Links Hardware support","title":"Hardware"},{"location":"hardware/#fields","text":"generation compute_capability","title":"Fields"},{"location":"hardware/#actions","text":"","title":"Actions"},{"location":"hardware/#add-hardware","text":"requires: generation compute_capability","title":"Add hardware"},{"location":"hardware/#update-harware","text":"partial update of any of these fields: generation compute_capability","title":"Update harware"},{"location":"hardware/#delete-hardware","text":"requires: generation","title":"Delete hardware"},{"location":"hardware/#links","text":"Hardware support","title":"Links"},{"location":"image_classification/","text":"Image classification is used to assign categories to images, e.g., whether the image represents an animal or a face. Use-cases The following use-cases must be covered. Create dataset requires: name of dataset project it belongs to (optional; default is all project) users allowed to manage it (optional; default is only user creating it) license (default: proprietary, ie all rights reserved) optional tag(s) Delete dataset requires: name of dataset Copy dataset requires: name of dataset either: new version new name List datasets requires: filters for tags, license, ... List images in dataset requires: name of dataset to list Modify dataset Sub use-cases: Add image requires: name of dataset to add to image categories Delete image Automatically removes any associated categories. requires: name of dataset to remove from name of image(s) to remove Add categories requires: name of dataset to add to name of image(s) to add to the categories to add Delete categories requires: name of dataset to remove from name of image(s) to remove from Change license requires: name of dataset to update license Tag dataset requires: name of dataset to tag tag(s) Download Download image requires: name of dataset name of image Download categories requires: name of dataset annotation format Download dataset Downloads the complete dataset as ZIP file. requires: name of dataset annotation format Other Bulk upload Uploads a complete dataset as ZIP file. Replaces any existing images with the same names and their associated categories. To be used when annotating data with third-party tools. requires: name of dataset annotation format Notes Versioning Versioning is handled in database: a dataset simply combines IDs of images Category formats The following annotation formats need to be supported: simple JSON: key (= name of image) with associated array of categories ADAMS ?? Public datasets Users must be able to flag a dataset as being public, i.e., being accessible without requiring login. Can be used for research datasets. Dependent models Datasets cannot be deleted if final models are in the model zoo depending on them.","title":"Image classification"},{"location":"image_classification/#use-cases","text":"The following use-cases must be covered.","title":"Use-cases"},{"location":"image_classification/#create-dataset","text":"requires: name of dataset project it belongs to (optional; default is all project) users allowed to manage it (optional; default is only user creating it) license (default: proprietary, ie all rights reserved) optional tag(s)","title":"Create dataset"},{"location":"image_classification/#delete-dataset","text":"requires: name of dataset","title":"Delete dataset"},{"location":"image_classification/#copy-dataset","text":"requires: name of dataset either: new version new name","title":"Copy dataset"},{"location":"image_classification/#list-datasets","text":"requires: filters for tags, license, ...","title":"List datasets"},{"location":"image_classification/#list-images-in-dataset","text":"requires: name of dataset to list","title":"List images in dataset"},{"location":"image_classification/#modify-dataset","text":"Sub use-cases:","title":"Modify dataset"},{"location":"image_classification/#add-image","text":"requires: name of dataset to add to image categories","title":"Add image"},{"location":"image_classification/#delete-image","text":"Automatically removes any associated categories. requires: name of dataset to remove from name of image(s) to remove","title":"Delete image"},{"location":"image_classification/#add-categories","text":"requires: name of dataset to add to name of image(s) to add to the categories to add","title":"Add categories"},{"location":"image_classification/#delete-categories","text":"requires: name of dataset to remove from name of image(s) to remove from","title":"Delete categories"},{"location":"image_classification/#change-license","text":"requires: name of dataset to update license","title":"Change license"},{"location":"image_classification/#tag-dataset","text":"requires: name of dataset to tag tag(s)","title":"Tag dataset"},{"location":"image_classification/#download","text":"","title":"Download"},{"location":"image_classification/#download-image","text":"requires: name of dataset name of image","title":"Download image"},{"location":"image_classification/#download-categories","text":"requires: name of dataset annotation format","title":"Download categories"},{"location":"image_classification/#download-dataset","text":"Downloads the complete dataset as ZIP file. requires: name of dataset annotation format","title":"Download dataset"},{"location":"image_classification/#other","text":"","title":"Other"},{"location":"image_classification/#bulk-upload","text":"Uploads a complete dataset as ZIP file. Replaces any existing images with the same names and their associated categories. To be used when annotating data with third-party tools. requires: name of dataset annotation format","title":"Bulk upload"},{"location":"image_classification/#notes","text":"","title":"Notes"},{"location":"image_classification/#versioning","text":"Versioning is handled in database: a dataset simply combines IDs of images","title":"Versioning"},{"location":"image_classification/#category-formats","text":"The following annotation formats need to be supported: simple JSON: key (= name of image) with associated array of categories ADAMS ??","title":"Category formats"},{"location":"image_classification/#public-datasets","text":"Users must be able to flag a dataset as being public, i.e., being accessible without requiring login. Can be used for research datasets.","title":"Public datasets"},{"location":"image_classification/#dependent-models","text":"Datasets cannot be deleted if final models are in the model zoo depending on them.","title":"Dependent models"},{"location":"jobs/","text":"Overview The following types of jobs are available: train predict evaluate export Jobs share the following common fields: job template start_time end_time error Once a job gets submitted, a broadcast is sent via RabbitMQ to all worker nodes. If a worker node matches (driver version, cpu/gpu memory), it can pull the job. Train A train job has the additional fields: datasets (train/test/val) Predict (or pre-label) A predict job has the additional fields: final_model dataset Evaluate An evaluate job has the additional fields: final_model dataset (test) Export An export job as the additional fields: final_model The following types of exports may be available: model model + batch-prediction code Android app Links RabbitMQ docker-py docker","title":"Job execution"},{"location":"jobs/#overview","text":"The following types of jobs are available: train predict evaluate export Jobs share the following common fields: job template start_time end_time error Once a job gets submitted, a broadcast is sent via RabbitMQ to all worker nodes. If a worker node matches (driver version, cpu/gpu memory), it can pull the job.","title":"Overview"},{"location":"jobs/#train","text":"A train job has the additional fields: datasets (train/test/val)","title":"Train"},{"location":"jobs/#predict-or-pre-label","text":"A predict job has the additional fields: final_model dataset","title":"Predict (or pre-label)"},{"location":"jobs/#evaluate","text":"An evaluate job has the additional fields: final_model dataset (test)","title":"Evaluate"},{"location":"jobs/#export","text":"An export job as the additional fields: final_model The following types of exports may be available: model model + batch-prediction code Android app","title":"Export"},{"location":"jobs/#links","text":"RabbitMQ docker-py docker","title":"Links"},{"location":"license_overview/","text":"Licenses give permissions, impose limitations and conditions. Domains Licenses can be applicable to one or more of the following domains: * software * data * models Current licenses AGPL3 Apache 2.0 BSD 2-clause BSD 3-clause CC0 CC-BY 4.0 CC-BY-SA 4.0 GPL2 GPL3 LGPL3 MIT Mozilla Public Licenses 2.0 The Unlicense Combined Permissions Limitations Conditions Definitions The licenses with links to their definitions are stored in this csv file .","title":"Licenses"},{"location":"license_overview/#domains","text":"Licenses can be applicable to one or more of the following domains: * software * data * models","title":"Domains"},{"location":"license_overview/#current-licenses","text":"AGPL3 Apache 2.0 BSD 2-clause BSD 3-clause CC0 CC-BY 4.0 CC-BY-SA 4.0 GPL2 GPL3 LGPL3 MIT Mozilla Public Licenses 2.0 The Unlicense","title":"Current licenses"},{"location":"license_overview/#combined","text":"Permissions Limitations Conditions","title":"Combined"},{"location":"license_overview/#definitions","text":"The licenses with links to their definitions are stored in this csv file .","title":"Definitions"},{"location":"model_templates/","text":"Each deeplearning framework comes with its own configuration file format. In order to start training on a dataset with a pre-trained model, we need to customize configuration templates. Users also need to be able to supply their own, tweaked templates. Configuration template A template contains the following information: template name framework (eg tensorflow 2.x) model name (Faster RCNN ResNet 101) license version config the raw configuration template with placeholders based on original framework config file simply stored as string between triple quotes parameters; each parameter: name (eg img_min_dim) required (true|false) placeholder in config (${IMG_MIN_DIM}) default value (for optional parameters) Actions Add template requires: template name framework model name version config parameters Delete template requires: template name framework model name version Download template requires: template name framework model name version Search parameters: framework model name license version ... Public templates Users must be able to flag a templates as being public, i.e., being accessible without requiring login.","title":"Model templates"},{"location":"model_templates/#configuration-template","text":"A template contains the following information: template name framework (eg tensorflow 2.x) model name (Faster RCNN ResNet 101) license version config the raw configuration template with placeholders based on original framework config file simply stored as string between triple quotes parameters; each parameter: name (eg img_min_dim) required (true|false) placeholder in config (${IMG_MIN_DIM}) default value (for optional parameters)","title":"Configuration template"},{"location":"model_templates/#actions","text":"","title":"Actions"},{"location":"model_templates/#add-template","text":"requires: template name framework model name version config parameters","title":"Add template"},{"location":"model_templates/#delete-template","text":"requires: template name framework model name version","title":"Delete template"},{"location":"model_templates/#download-template","text":"requires: template name framework model name version","title":"Download template"},{"location":"model_templates/#search","text":"parameters: framework model name license version ...","title":"Search"},{"location":"model_templates/#public-templates","text":"Users must be able to flag a templates as being public, i.e., being accessible without requiring login.","title":"Public templates"},{"location":"model_zoo/","text":"In order to perform transfer learning and build models on data, it is necessary to have pre-trained models readily available for the training process. Therefore we require two types of model storage: pre-trained models final models Pre-trained models Add model requires: model name version format model file or URL to upload license origin URL data domain(s) (classify/objdet/speech/...) public? meta-data description (input nodes, dimensions, etc) ... Delete model Automatically deletes the meta-data. Cannot be deleted if a final model depends on it. requires: model name version format Download model requires: model name format version Search parameters: data domain license or permissions/limitations/conditions ... Final models Add model requires: model name version format model file or URL to upload pre-trained model ID it was built on top of dataset ID it was trained with license data domain(s) (classify/objdet/speech/...) public? meta-data description (input nodes, dimensions, etc) results on validation/test datasets ... Delete model Automatically deletes the meta-data. requires: model name version format Download model requires: model name format version Notes Format conversions Automatic model conversion into different formats ( MMdnn )? Public models Users must be able to flag a models (pre-trained or train) as being public, i.e., being accessible without requiring login.","title":"Model Zoo"},{"location":"model_zoo/#pre-trained-models","text":"","title":"Pre-trained models"},{"location":"model_zoo/#add-model","text":"requires: model name version format model file or URL to upload license origin URL data domain(s) (classify/objdet/speech/...) public? meta-data description (input nodes, dimensions, etc) ...","title":"Add model"},{"location":"model_zoo/#delete-model","text":"Automatically deletes the meta-data. Cannot be deleted if a final model depends on it. requires: model name version format","title":"Delete model"},{"location":"model_zoo/#download-model","text":"requires: model name format version","title":"Download model"},{"location":"model_zoo/#search","text":"parameters: data domain license or permissions/limitations/conditions ...","title":"Search"},{"location":"model_zoo/#final-models","text":"","title":"Final models"},{"location":"model_zoo/#add-model_1","text":"requires: model name version format model file or URL to upload pre-trained model ID it was built on top of dataset ID it was trained with license data domain(s) (classify/objdet/speech/...) public? meta-data description (input nodes, dimensions, etc) results on validation/test datasets ...","title":"Add model"},{"location":"model_zoo/#delete-model_1","text":"Automatically deletes the meta-data. requires: model name version format","title":"Delete model"},{"location":"model_zoo/#download-model_1","text":"requires: model name format version","title":"Download model"},{"location":"model_zoo/#notes","text":"","title":"Notes"},{"location":"model_zoo/#format-conversions","text":"Automatic model conversion into different formats ( MMdnn )?","title":"Format conversions"},{"location":"model_zoo/#public-models","text":"Users must be able to flag a models (pre-trained or train) as being public, i.e., being accessible without requiring login.","title":"Public models"},{"location":"object_detection/","text":"Object detection or object co-segmentation is used for detecting specific types of objects in images. For this to work, images need to be annotated with the relevant regions highlighted. The regions can either be simple bounding boxes or polygons that align to the shape of the objects. Use-cases The following use-cases must be covered Create dataset requires: name of dataset project it belongs to (optional; default is all project) users allowed to manage it (optional; default is only user creating it) license (default: proprietary, ie all rights reserved) optional tag(s) Delete dataset requires: name of dataset Copy dataset requires: name of dataset either: new version new name List datasets requires: filters for tags, license, ... List images in dataset requires: name of dataset to list Modify dataset Sub use-cases: Add image requires: name of dataset to add to Add annotations Automatically replaces any existing annotations for an image. requires: name of dataset to add to name of image to add to Delete image Automatically removes any associated annotations. requires: name of dataset to remove from name of image(s) to remove Delete annotations requires: name of dataset to remove from name of image(s) to remove them from Replace annotations See Add annotations . Change license requires: name of dataset to update license Tag dataset requires: name of dataset to tag tag(s) Download Download image requires: name of dataset name of image Download annotations requires: name of dataset annotation format Download dataset Downloads the complete dataset as ZIP file. requires: name of dataset annotation format Other Bulk upload Uploads a complete dataset as ZIP file. Replaces any existing images with the same names and their associated annotations. To be used when annotating data with third-party tools like ADAMS. requires: name of dataset type of annotations Pre-label images Upload images as ZIP file and submits a job for labeling them. requires: annotation format name of model to use for pre-labeling either: send email with annotations for images add images and their annotations to existing dataset (requires dataset name then) Notes Versioning Versioning is handled in database: a dataset simply combines IDs of images Annotation formats The following annotation formats need to be supported: ADAMS reports simple Java properties files extension .report annotation format: Object.XYZ.{y|y|width|height|poly_x|poly_y} ( poly_x and poly_y are only used for object shapes; the numeric XYZ index ties the various properties for an object together) MS COCO JSON Public datasets Users must be able to flag a dataset as being public, i.e., being accessible without requiring login. Can be used for research datasets. Dependent models Datasets cannot be deleted if final models in the model zoo depend on them.","title":"Object Detection"},{"location":"object_detection/#use-cases","text":"The following use-cases must be covered","title":"Use-cases"},{"location":"object_detection/#create-dataset","text":"requires: name of dataset project it belongs to (optional; default is all project) users allowed to manage it (optional; default is only user creating it) license (default: proprietary, ie all rights reserved) optional tag(s)","title":"Create dataset"},{"location":"object_detection/#delete-dataset","text":"requires: name of dataset","title":"Delete dataset"},{"location":"object_detection/#copy-dataset","text":"requires: name of dataset either: new version new name","title":"Copy dataset"},{"location":"object_detection/#list-datasets","text":"requires: filters for tags, license, ...","title":"List datasets"},{"location":"object_detection/#list-images-in-dataset","text":"requires: name of dataset to list","title":"List images in dataset"},{"location":"object_detection/#modify-dataset","text":"Sub use-cases:","title":"Modify dataset"},{"location":"object_detection/#add-image","text":"requires: name of dataset to add to","title":"Add image"},{"location":"object_detection/#add-annotations","text":"Automatically replaces any existing annotations for an image. requires: name of dataset to add to name of image to add to","title":"Add annotations"},{"location":"object_detection/#delete-image","text":"Automatically removes any associated annotations. requires: name of dataset to remove from name of image(s) to remove","title":"Delete image"},{"location":"object_detection/#delete-annotations","text":"requires: name of dataset to remove from name of image(s) to remove them from","title":"Delete annotations"},{"location":"object_detection/#replace-annotations","text":"See Add annotations .","title":"Replace annotations"},{"location":"object_detection/#change-license","text":"requires: name of dataset to update license","title":"Change license"},{"location":"object_detection/#tag-dataset","text":"requires: name of dataset to tag tag(s)","title":"Tag dataset"},{"location":"object_detection/#download","text":"","title":"Download"},{"location":"object_detection/#download-image","text":"requires: name of dataset name of image","title":"Download image"},{"location":"object_detection/#download-annotations","text":"requires: name of dataset annotation format","title":"Download annotations"},{"location":"object_detection/#download-dataset","text":"Downloads the complete dataset as ZIP file. requires: name of dataset annotation format","title":"Download dataset"},{"location":"object_detection/#other","text":"","title":"Other"},{"location":"object_detection/#bulk-upload","text":"Uploads a complete dataset as ZIP file. Replaces any existing images with the same names and their associated annotations. To be used when annotating data with third-party tools like ADAMS. requires: name of dataset type of annotations","title":"Bulk upload"},{"location":"object_detection/#pre-label-images","text":"Upload images as ZIP file and submits a job for labeling them. requires: annotation format name of model to use for pre-labeling either: send email with annotations for images add images and their annotations to existing dataset (requires dataset name then)","title":"Pre-label images"},{"location":"object_detection/#notes","text":"","title":"Notes"},{"location":"object_detection/#versioning","text":"Versioning is handled in database: a dataset simply combines IDs of images","title":"Versioning"},{"location":"object_detection/#annotation-formats","text":"The following annotation formats need to be supported: ADAMS reports simple Java properties files extension .report annotation format: Object.XYZ.{y|y|width|height|poly_x|poly_y} ( poly_x and poly_y are only used for object shapes; the numeric XYZ index ties the various properties for an object together) MS COCO JSON","title":"Annotation formats"},{"location":"object_detection/#public-datasets","text":"Users must be able to flag a dataset as being public, i.e., being accessible without requiring login. Can be used for research datasets.","title":"Public datasets"},{"location":"object_detection/#dependent-models","text":"Datasets cannot be deleted if final models in the model zoo depend on them.","title":"Dependent models"},{"location":"speech/","text":"Speech processing is used for generating text from audio or audio from text. Use-cases The following use-cases must be covered. Create dataset requires: name of dataset project it belongs to (optional; default is all project) users allowed to manage it (optional; default is only user creating it) license (default: proprietary, ie all rights reserved) optional tag(s) Delete dataset requires: name of dataset Copy dataset requires: name of dataset either: new version new name List datasets requires: filters for tags, license, ... List images in dataset requires: name of dataset to list Modify dataset Sub use-cases: Add sound file requires: name of dataset to add to associated transcript Delete sound file Automatically removes the associated transcript. requires: name of dataset to remove from name of file(s) to remove Set transcript requires: name of dataset to update name of file(s) the transcript Change license requires: name of dataset to update license Tag dataset requires: name of dataset to tag tag(s) Download Download sound file requires: name of dataset name of file Download transcript requires: name of dataset name of file Download dataset Downloads the complete dataset as ZIP file. requires: name of dataset format Other Notes Versioning Versioning is handled in database: a dataset simply combines IDs of images Public datasets Users must be able to flag a dataset as being public, i.e., being accessible without requiring login. Can be used for research datasets. Dependent models Datasets cannot be deleted if final models are in the model zoo depending on them.","title":"Speech"},{"location":"speech/#use-cases","text":"The following use-cases must be covered.","title":"Use-cases"},{"location":"speech/#create-dataset","text":"requires: name of dataset project it belongs to (optional; default is all project) users allowed to manage it (optional; default is only user creating it) license (default: proprietary, ie all rights reserved) optional tag(s)","title":"Create dataset"},{"location":"speech/#delete-dataset","text":"requires: name of dataset","title":"Delete dataset"},{"location":"speech/#copy-dataset","text":"requires: name of dataset either: new version new name","title":"Copy dataset"},{"location":"speech/#list-datasets","text":"requires: filters for tags, license, ...","title":"List datasets"},{"location":"speech/#list-images-in-dataset","text":"requires: name of dataset to list","title":"List images in dataset"},{"location":"speech/#modify-dataset","text":"Sub use-cases:","title":"Modify dataset"},{"location":"speech/#add-sound-file","text":"requires: name of dataset to add to associated transcript","title":"Add sound file"},{"location":"speech/#delete-sound-file","text":"Automatically removes the associated transcript. requires: name of dataset to remove from name of file(s) to remove","title":"Delete sound file"},{"location":"speech/#set-transcript","text":"requires: name of dataset to update name of file(s) the transcript","title":"Set transcript"},{"location":"speech/#change-license","text":"requires: name of dataset to update license","title":"Change license"},{"location":"speech/#tag-dataset","text":"requires: name of dataset to tag tag(s)","title":"Tag dataset"},{"location":"speech/#download","text":"","title":"Download"},{"location":"speech/#download-sound-file","text":"requires: name of dataset name of file","title":"Download sound file"},{"location":"speech/#download-transcript","text":"requires: name of dataset name of file","title":"Download transcript"},{"location":"speech/#download-dataset","text":"Downloads the complete dataset as ZIP file. requires: name of dataset format","title":"Download dataset"},{"location":"speech/#other","text":"","title":"Other"},{"location":"speech/#notes","text":"","title":"Notes"},{"location":"speech/#versioning","text":"Versioning is handled in database: a dataset simply combines IDs of images","title":"Versioning"},{"location":"speech/#public-datasets","text":"Users must be able to flag a dataset as being public, i.e., being accessible without requiring login. Can be used for research datasets.","title":"Public datasets"},{"location":"speech/#dependent-models","text":"Datasets cannot be deleted if final models are in the model zoo depending on them.","title":"Dependent models"},{"location":"user_management/","text":"Requirements for user management: support for multiple organizations each organization must support multiple users a user can be member of multiple organizations each organization can have multiple projects each project can have multiple datasets users require permissions to manage projects manage datasets schedule jobs (eg building a model on a dataset) suport for one or more organization-wide admins","title":"User management"},{"location":"licenses/","text":"Licenses This directory contains licenses and their associated permissions, limitations and conditions. Each file has the following format: p: - prefix for permission l: - prefix for limitation c: - prefix for condition u: - prefix for URL for an example displaying permissions/limitations/conditions The combine.sh script combines all the license files and then extracts: _permissions.txt - list of all available permissions _limitations.txt - list of all available limitations _conditions.txt - list of all available conditions","title":"Licenses"},{"location":"licenses/#licenses","text":"This directory contains licenses and their associated permissions, limitations and conditions. Each file has the following format: p: - prefix for permission l: - prefix for limitation c: - prefix for condition u: - prefix for URL for an example displaying permissions/limitations/conditions The combine.sh script combines all the license files and then extracts: _permissions.txt - list of all available permissions _limitations.txt - list of all available limitations _conditions.txt - list of all available conditions","title":"Licenses"}]}